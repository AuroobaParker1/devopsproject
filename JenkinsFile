pipeline {

    environment {
        dockerimagebe = 'nawalirfan/thriftstore-be'
        dockerImageBackend = ""
        dockerimagefe = 'nawalirfan/thriftstore-fe'
        dockerImageFrontend = ""
        registryCredential = '1cdec1d8-91fd-4419-8624-1c430755e65a'
        kubeconfigSecret = '00256892-d25f-4348-8fdb-4d65fdd39d8b'
        kubeconfigPath = 'C:\\Users\\irfan\\.kube\\config'    
    }
    agent any

    stages {   
        stage('Build Docker Images') {
            steps {
                echo 'Building Docker Image...'                
                script {
                    dockerImageBackend = docker.build("${dockerimagebe}","./Thrift_Store")
                    dockerImageFrontend = docker.build("${dockerimagefe}","./react-tutorial")
                }                          
            }
        }
        stage('Push Docker Images') {
            
            steps {
                echo 'Pushing Docker Image...' 
                withCredentials([usernamePassword(credentialsId: 'dockercreds', passwordVariable: 'DOCKERHUB_PASSWORD', usernameVariable: 'DOCKERHUB_USERNAME')]) {
                    bat "docker login -u %DOCKERHUB_USERNAME% -p %DOCKERHUB_PASSWORD%"
                }               
                script {
                    docker.withRegistry( '', registryCredential) {
                        dockerImageBackend.push("latest")
                        dockerImageFrontend.push("latest")
                    }
                }                          
            }
        }   
        stage('deploy on Kubernetes') {
        steps {
            echo 'Deploying on kubernetes'
            script {
                withCredentials([file(credentialsId: "${kubeconfigSecret}", variable: 'KUBECONFIG')]) {
                    bat 'type %KUBECONFIG%'
                    bat "kubectl --kubeconfig ${kubeconfigPath} apply -f ./Kubernetes/mongo-deployment.yaml --validate=false"
                    bat "kubectl --kubeconfig ${kubeconfigPath} apply -f ./Kubernetes/backend-deployment.yaml --validate=false"
                    bat "kubectl --kubeconfig ${kubeconfigPath} apply -f ./Kubernetes/frontend-deployment.yaml --validate=false"
                }
            }
        }
}
        
    }
    post {
        success {
            echo 'Build successful!'
        }        
        failure {
            echo 'Build failed!'
        }
    }
}