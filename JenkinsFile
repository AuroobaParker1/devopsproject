pipeline {
    agent any

    stages {        
        stage('minikube config') {
            steps {
                echo 'Starting minikube...'
                bat "docker context use default"
                bat 'minikube config set driver docker'
                bat 'minikube start'
                powershell 'minikube docker-env | Invoke-Expression'
            }
        }
        stage('Build Docker Images') {
            steps {
                echo 'Building...'                
                bat 'docker build -t thriftstore-be:latest -f Thrift_Store/Dockerfile Thrift_Store --cache-from thriftstore-be:latest'                                                    
                bat 'docker build -t thriftstore-fe:latest -f react-tutorial/Dockerfile react-tutorial --cache-from thriftstore-fe:latest'
                bat 'cd..'                           
            }
        }
        stage('deploy on minikube'){
            steps {                
                bat 'kubectl apply -f ./Kubernetes/mongo-deployment.yaml'
                bat 'kubectl apply -f ./Kubernetes/backend-deployment.yaml'
                bat 'kubectl apply -f ./Kubernetes/frontend-deployment.yaml'
                bat 'kubectl get pods'
                bat 'kubectl get deployments'
                bat 'kubectl get services'                            
            }
        }               
    }
    post {
        success {
            echo 'Build successful!'
        }        
        failure {
            echo 'Build failed!'
        }
    }
}