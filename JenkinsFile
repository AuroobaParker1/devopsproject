pipeline {

    environment {
        dockerimagebe = 'Thrift_Store/thriftstore-be'
        dockerImageBackend = ""
        dockerimagefe = 'react-tutorial/thriftstore-fe'
        dockerImageFrontend = ""
    }
    agent any

    stages {   
        stage('Build Docker Images') {
            steps {
                echo 'Building Docker Image...'                
                script {
                    dockerImageBackend = docker.build dockerimagebe
                    dockerImageFrontend = docker.build dockerimagefe
                }                          
            }
        }
        stage('Push Docker Images') {
            environment {
                registryCredential = '1cdec1d8-91fd-4419-8624-1c430755e65a'
            }
            steps {
                echo 'Pushing Docker Image...'                
                script {
                    docker.withRegistry( '', registryCredential) {
                        dockerImageBackend.push('latest')
                        dockerImageFrontend.push('latest')
                    }
                }                          
            }
        }   
        stage('deploy on Kubernetes') {
        steps {
            echo 'Deploying on kubernetes'
            script {
                kubernetesDeploy(configs: './Kubernetes/mongo-deployment.yaml', kubeconfigId: '00256892-d25f-4348-8fdb-4d65fdd39d8b')
                kubernetesDeploy(configs: './Kubernetes/backend-deployment.yaml', kubeconfigId: '00256892-d25f-4348-8fdb-4d65fdd39d8b')
                kubernetesDeploy(configs: './Kubernetes/frontend-deployment.yaml', kubeconfigId: '00256892-d25f-4348-8fdb-4d65fdd39d8b')
            }
        }
}
        
    }
    post {
        success {
            echo 'Build successful!'
        }        
        failure {
            echo 'Build failed!'
        }
    }
}